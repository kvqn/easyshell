import data from "./wiki.autogenerated.js"

import { z } from "zod"

const DataSchema = z.record(
  z.string(),
  z.object({
    title: z.string(),
    body: z.string(),
    type: z.enum(["editorial"]),
    lastEdited: z.string().transform((date) => new Date(date)),
  }),
)

const parsedData = DataSchema.parse(data)

export async function getWikiPages(): Promise<
  Array<{ slug: string; title: string; type: "editorial"; lastEdited: Date }>
> {
  const pages = Object.keys(parsedData).map((slug) => ({
    slug,
    title: parsedData[slug]!.title,
    type: parsedData[slug]!.type,
    lastEdited: parsedData[slug]!.lastEdited,
  }))

  pages.sort((a, b) => b.lastEdited.getTime() - a.lastEdited.getTime())

  return pages
}

export async function getWikiMetadata(slug: string) {
  const info = parsedData[slug]
  if (!info) return null
  return {
    title: info.title,
    type: info.type,
    lastEdited: info.lastEdited,
  }
}

export async function getWikiFull(slug: string) {
  const info = parsedData[slug]
  if (!info) return null
  return info
}
