name: Deployment
on:
  push:
    branches:
      - main

concurrency:
  group: deployment
  cancel-in-progress: false

jobs:
  # =========================== Pushing to Registry ============================

  registry-push-problems:
    environment: deployment
    runs-on: ubuntu-latest
    steps:
      - run: echo '${{ secrets.DOCKER_PASSWORD }}' | docker login ${{ secrets.DOCKER_REGISTRY }} -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - uses: actions/setup-node@v4
        with:
          node-version: 22.14.0
      - uses: actions/checkout@v4
      - run: npm i
      - run: npm run build all
        name: build problems
        working-directory: ./packages/problems
      - run: npm run test all
        name: test problems
        working-directory: ./packages/problems
      - run: npm run build all
        name: push problems
        working-directory: ./packages/problems
        env:
          DOCKER_REGISTRY: ${{ secrets.DOCKER_REGISTRY }}

  registry-push-session-manager:
    environment: deployment
    runs-on: ubuntu-latest
    steps:
      - run: echo '${{ secrets.DOCKER_PASSWORD }}' | docker login ${{ secrets.DOCKER_REGISTRY }} -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - uses: actions/checkout@v4
      - run: docker build -t ${{ secrets.DOCKER_REGISTRY }}/session-manager:latest -f ./apps/session-manager/Dockerfile ./apps/session-manager
      - run: docker push ${{ secrets.DOCKER_REGISTRY }}/session-manager:latest

  registry-push-queue-processor:
    environment: deployment
    runs-on: ubuntu-latest
    steps:
      - run: echo '${{ secrets.DOCKER_PASSWORD }}' | docker login ${{ secrets.DOCKER_REGISTRY }} -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - uses: actions/checkout@v4
      - run: docker build -t ${{ secrets.DOCKER_REGISTRY }}/queue-processor:latest -f ./apps/queue-processor/Dockerfile .
      - run: docker push ${{ secrets.DOCKER_REGISTRY }}/queue-processor:latest

  # ============================================================================

  # =============================== Deployments ================================

  deploy-vps:
    needs:
      - registry-push-problems
      - registry-push-queue-processor
      - registry-push-session-manager
    environment: deployment
    runs-on: ubuntu-latest
    steps:
      - name: Tailscale
        uses: tailscale/github-action@v3
        with:
          oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
          tags: tag:ci
      - name: Make .ssh folder
        run: mkdir -p ~/.ssh
      - name: Write SSH private key
        run: echo '${{ secrets.SSH_PRIVATE_KEY }}' > ~/.ssh/id_rsa
      - name: Set permissions for SSH private key
        run: chmod 400 ~/.ssh/id_rsa
      - name: SSH into server
        run: ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} './scripts/update-easyshell.sh'

  deploy-cf:
    environment: deployment
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 22.14.0
      - uses: actions/checkout@v4
      - run: npm install
      - run: npm run cache:website
        working-directory: ./packages/problems
      - run: npm run deploy
        working-directory: ./apps/website
        env:
          CF_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
          CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}

  # ============================================================================
