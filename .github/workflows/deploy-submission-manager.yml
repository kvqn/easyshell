name: deploy submission-manager
on:
  push:
    branches:
      - main
    paths:
      - "packages/**"
      - "apps/submission-manager/**"
  workflow_dispatch:

jobs:
  registry-push-submission-manager:
    concurrency:
      group: push-submission-manager
      cancel-in-progress: false
    environment: deployment
    runs-on: ubuntu-latest
    steps:
      - name: tailscale
        uses: tailscale/github-action@v3
        with:
          oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
          tags: tag:ci
      - name: docker login
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - uses: actions/checkout@v4
      - run: docker build -t ${{ secrets.DOCKER_REGISTRY }}/submission-manager:latest -f ./apps/submission-manager/Dockerfile .
      - run: docker push ${{ secrets.DOCKER_REGISTRY }}/submission-manager:latest

  deploy-vps:
    needs:
      - registry-push-submission-manager
    concurrency:
      group: deploy-vps
      cancel-in-progress: false
    environment: deployment
    runs-on: ubuntu-latest
    steps:
      - name: Make .ssh folder
        run: mkdir -p ~/.ssh
      - name: Write SSH private key
        run: echo '${{ secrets.SSH_PRIVATE_KEY }}' > ~/.ssh/id_rsa
      - name: Set permissions for SSH private key
        run: chmod 400 ~/.ssh/id_rsa
      - name: SSH into server
        run: ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} ${{ secrets.SSH_COMMAND }}
